# https://taskfile.dev

version: '3'

dotenv: ['.env', '{{.ENV}}/.env.', '{{.HOME}}/.env']

env:
  PACKAGE: python_template
  PYTHON_VERSION: 3.11.3
  DOCKER_IMAGE: $PACKAGE:$VERSION
  DOCKER_IMAGE_VERSION: v0.0.1

vars:
  VENV_DIR: "{{.HOME}}/.venv/$PACKAGE"

tasks:

  black:
    desc: run the python black formatter
    cmds:
      #- "{{.VENV_DIR}}/bin/black src/$PACKAGE/ tests/"
      - "black src/$PACKAGE/ tests/"
    aliases: [b]

  checklist:
    desc: run python toolkit
    deps: [black, ruff]

  clean:
    desc: cleanup python environment and cache
    deps: [venv-remove]
    cmds:
      - rm -rf dist/
      - rm -rf build/
      - rm -rf _build/
      - rm -rf *.egg-info
      - find . -name '*.pyc' -delete
      - find . -name '*.pyo' -delete
      - find . -name '*.egg-link' -delete
      - find . -name '__pycache__' -type d -exec rm --recursive --force {} +
      - find . -name '.mypy_cache' -type d -exec rm --recursive --force {} +
      - find . -name '.pytest_cache' -type d -exec rm --recursive --force {} +
      - find . -name '.ruff_cache' -type d -exec rm --recursive --force {} +
      - find . -name '*.pyc' -exec rm --force {} +
      - find . -name '*.pyo' -exec rm --force {} +

  dbuild:
    desc: docker build $DOCKER_IMAGE
    cmds:
      - docker build . --network host --tag ${DOCKER_IMAGE}:${DOCKER_IMAGE_VERSION}
    silent: false

  # install:
  #   deps: [venv]
  #   desc: pip install (for environments without rye)
  #   cmds:
  #     - "{{.VENV_DIR}}/bin/pip install --upgrade pip --requirement requirements.txt"
  #   silent: false
  #   aliases: [i]

  install-globals:
    desc: install global tools with rye
    cmds:
      - rye install black
      - rye install ipython
      - rye install ruff
    silent: false

  precommit-install:
    desc: pre-commit install
    cmds:
      - "{{.VENV_DIR}}/bin/pre-commit install"
    aliases: [pci]

  radon:
    desc: run radon
    cmds:
      - "{{.VENV_DIR}}/bin/radon cc --average -nc src/$PACKAGE/ tests/"
      - "{{.VENV_DIR}}/bin/radon mi src/$PACKAGE/ tests/"
    silent: false

  ruff:
    desc: run the ruff linter
    silent: false
    cmds:
      - "ruff --show-files src/$PACKAGE/ tests/"

  # setup:
  #   desc: setup dev environment
  #   deps: [install]
  #   silent: false
  #   cmds:
  #     - task: pc-install

  setup:
    desc: setup dev environment
    cmds:
      - rye init --name $PACKAGE
      - rye pin $PYTHON_VERSION
      - mkdir -p tests/
      - touch tests/__init__.py
    deps: [installs-global]


  test:
    desc: run tests with pytest
    cmds:
      - "{{.VENV_DIR}}/bin/python -m pytest -s --verbose tests/"
    aliases: [t]

  venv:
    desc: create python virtual environment with venv
    cmds:
      - python -m venv {{.VENV_DIR}}
    silent: false
    status:
      - test -d {{.VENV_DIR}}
    aliases: [v]

  venv-remove:
    desc: remove python virtual environment
    cmds:
      - rm -rf {{.VENV_DIR}}
    silent: false
